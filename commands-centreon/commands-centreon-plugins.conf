const _centreon_plugins_dir = {{
        if (CENTREON_PLUGIN_DIR) {
                CENTREON_PLUGIN_DIR
        } else {
                CheckScriptPath + "/externals/centreon-plugins"
        }
}}

template CheckCommand "tcc_ipv4o6" {
	vars.check_address = {{
		var addr_v4 = macro("$address$")
		var addr_v6 = macro("$address6$")

		if (addr_v4 && !macro("$check_ipv6$") || macro("$check_ipv4$")) {
			return addr_v4
		} else {
			return addr_v6
		}
	}}

	vars.check_ipv4 = false
	vars.check_ipv6 = false
}

template CheckCommand "tcc_centreon_plugins" {
	import "tcc_ipv4o6"

	command = [ "/usr/bin/env", "perl", _centreon_plugins_dir() + "/centreon_plugins.pl" ]

	arguments += {
		"--debug" = {
			set_if = "$centreon_debug$"
			description = "activate debug mode, could be very verbose"
		}
		"--filter-perfdata" = {
			value = "$centreon_filter_perfdata$"
			description = "Filter perfdata that match the regexp"
		}
		"--explode-perfdata-max" = {
			value = "$centreon_explode_perfdata_max$"
			description = "Put max perfdata (if it exist) in a specific perfdata (without values: same with '_max' suffix) (Multiple options)"
		}
		"--change-perfdata" = {
			value = "$centreon_change_perfdata$"
			description = "Change perfdata. Syntax: --change-perfdata=searchlabel,newlabel,target[,newuom]"
		}
		"--extend-perfdata" = {
			value = "$centreon_extend_perfdata$"
			description = "Change perfdata. Syntax: --extend-perfdata=searchlabel,newlabel,target[,newuom]"
		}
		"--range-perfdata" = {
			value = "$centreon_range_perfdata$"
			description = "Change perfdata range thresholds display: 1 = start value equals to '0' is removed, 2 = threshold range is not display."
		}
		"--filter-uom" = {
			value = "$centreon_filter_uom$"
			description = "Filter UOM that match the regexp."
		}
		"--opt-exit" = {
			value = "$centreon_opt_exit$"
			description = "Exit code for an option error, usage (default: unknown)."
		}
		"--output-xml" = {
			value = "$centreon_output_xml$"
			description = "Display output in XML Format."
		}
		"--output-json" = {
			value = "$centreon_output_json$"
			description = "Display output in JSON Format."
		}
		"--output-file" = {
			value = "$centreon_output_file$"
			description = "Write output in file (can be used with json and xml options)"
		}
		"--disco-format" = {
			value = "$centreon_disco_format$"
			description = "Display discovery arguments (if the mode manages it)."
		}
		"--disco-show" = {
			value = "$centreon_disco_show$"
			description = "Display discovery values (if the mode manages it)."
		}
	}
	vars.centreon_range_perfdata = 1
	vars.centreon_opt_exit = "critical"
}

